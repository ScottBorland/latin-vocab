{"version":3,"sources":["contexts/TagalogContext.js","components/VocabCard.js","components/VocabPractice.js","App.js","serviceWorker.js","index.js"],"names":["TagalogContext","createContext","TagalogContextProvider","props","useState","adjectives","setAdjectives","stall","a","stallTime","Promise","resolve","setTimeout","getAdjectives","type","latin","english","adj","useEffect","Provider","value","children","VocabCard","isFlipped","setIsFlipped","className","Card","bg","text","border","style","width","onClick","Header","Body","Title","Text","notes","VocabPractice","useContext","cards","setCards","currentCardIndex","setCurrentCardIndex","currentCard","setCurrentCard","length","newCards","concat","englishSentence","_","startCase","Button","variant","index","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.e128d47e.chunk.js","sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\nexport const TagalogContext = createContext();\n\nexport const TagalogContextProvider = (props) => {\n    const [adjectives, setAdjectives] = useState([]);\n\n    // simulate an async call, as if we are calling an API\n    const stall = async(stallTime = 2000) => {\n        await new Promise(resolve => setTimeout(resolve, stallTime));\n    }\n\n    const getAdjectives = async () => {\n        await stall();\n        let adj = await Promise.resolve([\n            { type: 'noun', latin: 'somnus', english: 'sleep', 'notes': 'somnus, somni'},\n            { type: 'noun', latin: 'epulum', english: 'feast, banquet', 'notes': 'epulum, epuli'},\n            { type: 'verb', latin: 'premo', english: 'press, pursue', 'notes': 'premere, pressi, pressum'},\n            { type: 'noun', latin: 'fames', english: 'hunger, famine, want, craving', 'notes': 'fames, famis'},\n            { type: 'noun', latin: 'eruptio', english: 'sortie, rush, sally', 'notes': 'eruptio, eruptionis'},\n            { type: 'verb', latin: 'consero', english: 'fasten, connect, entwine, tie, join or bind into a whole, unite, bring together, (with manum or manus) engage in close combat, join battle', 'notes': 'consere, conserui, consertum'},\n            { type: 'verb', latin: 'adimo', english: 'take away, deprive of, snatch away, carry off; steal; capture, remove, save, rescue', 'notes': 'adimere, ademi, ademptum'},\n            { type: 'verb', latin: 'premo', english: 'press, pursue', 'notes': 'premere, pressi, pressum'},\n            { type: 'noun', latin: 'fames', english: 'hunger, famine, want, craving', 'notes': 'fames, famis'},\n            { type: 'noun', latin: 'audaciae', english: 'boldness, daring, courage, confidence; recklessness, effrontery, audacity', 'notes': 'audacia, audaciae'},\n            { type: 'adjective', latin: 'audax', english: 'bold, daring, courageous', 'notes': 'audax, audacis, audacior -or -us, audacissimus -a -um'},\n            { type: 'verb', latin: 'supplico', english: 'pray', 'notes': 'supplicare, supplicavi, supplicatum'},\n            { type: 'verb', latin: 'portendo', english: 'foretell', 'notes': 'portendere, portendi, portentum'},\n            { type: 'noun', latin: 'probitas', english: 'honesty', 'notes': 'probitatis, f'},\n            { type: 'adjective', latin: 'modicus', english: 'moderate, unambitious', 'notes': 'modica, modicum'},\n            { type: 'noun', latin: 'facundia', english: 'eloquence', 'notes': 'facundae'},\n            { type: 'noun', latin: 'munditia', english: 'elegance, refinement', 'notes': 'munditia, munditium'},\n            { type: 'adjective', latin: 'nocturnus', english: 'of the night', 'notes': '-a -um'},\n            { type: 'noun', latin: 'torus', english: 'couch', 'notes': ' -i'},\n            { type: 'noun', latin: 'miseratio', english: 'pity', 'notes': '-onis'},\n            { type: 'verb', latin: 'interpretor', english: 'interpret, understand', 'notes': '-ari -atus sum'},\n            { type: 'verb', latin: 'facundia', english: 'eloquence', 'notes': 'facundae'},\n            { type: 'verb', latin: 'expavesco', english: 'be terrified', 'notes': '-ere expavi'},\n            { type: 'verb', latin: 'imaginor', english: 'imagine, think', 'notes': '-ari -atus sum'},\n            { type: 'noun', latin: 'scrinium', english: 'small writing desk', 'notes': '-i'},\n            { type: 'verb', latin: 'tempto', english: 'test, try; urge; worry; bribe', 'notes': 'temptare, temptavi, temptatus'},\n            { type: 'verb', latin: 'cedo', english: 'go/pass (from/away), grant, concede, yield, submit', 'notes': 'cedere, cessi, cessus'},\n            { type: 'noun', latin: 'vota', english: 'vow, pledge, religious undertaking/promise, vote', 'notes': 'votum, voti'},\n            { type: 'verb', latin: 'divello', english: 'tear away', 'notes': 'divellere'},\n            { type: 'noun', latin: 'atavus', english: 'ancestor, forefather', 'notes': '-i'},\n            { type: 'noun', latin: 'truncus', english: 'trunk', 'notes': '-i'},\n            { type: 'noun', latin: 'mundi', english: 'universe, heavens; world, mankind', 'notes': 'mundus, mundi'},\n            { type: 'noun', latin: 'ramum', english: 'branch, bough', 'notes': 'ramus, rami'},\n            { type: 'verb', latin: 'monstro', english: 'show; point out, reveal; advise, teach', 'notes': 'monstrare, monstravi, monstratus'},\n            { type: 'noun', latin: 'opes', english: 'power, might; help; influence; resources/wealth', 'notes': 'ops, opis'},\n            { type: 'verb', latin: 'fulgeo', english: 'flash, shine; glow, gleam, glitter, shine forth, be bright', 'notes': 'fulgere, fulsi'},\n            { type: 'verb', latin: 'adeo', english: 'approach; attack; visit, address; undertake', 'notes': 'adeo, adire, adivi, aditus'},\n            { type: 'verb', latin: 'mollio', english: 'relieve, ease', 'notes': '-ire'},\n            { type: 'noun', latin: 'aversus', english: 'return, going back', 'notes': '-a -um'},\n            { type: 'noun', latin: 'trames', english: 'track, path', 'notes': '-itis'},\n            { type: 'verb', latin: 'intueor', english: 'look at, upon or towards, consider, regard, observe, regard with admiration, wonder at', 'notes': 'intueri, intuitus sum'},\n            { type: 'verb', latin: 'praeficio', english: 'put in command', 'notes': 'praeficere, praefeci, praefectum'},\n            { type: 'noun', latin: 'habitus', english: 'appearance, expression', 'notes': '-us'},\n            { type: 'noun', latin: 'lineamentum', english: 'line, feature', 'notes': '-i'},\n            { type: 'adjective', latin: 'strenuus', english: 'energetic', 'notes': '-a, -um'},\n            { type: 'noun', latin: 'calor', english: 'heat', 'notes': 'caloris'},\n            { type: 'adjective', latin: 'habilis', english: 'fit, apt, suitable', 'notes': '-e'},\n            { type: 'noun', latin: 'vicis', english: 'succession, change of season', 'notes': 'vicis, f'},\n            { type: 'noun', latin: 'latebra', english: 'hiding place, subterfuge, retreat', 'notes': 'ae, f'},\n            { type: 'noun', latin: 'patientiae', english: 'ability to endure', 'notes': '-ae, f'},\n        ])\n        setAdjectives(adj);\n    }\n\n    useEffect(() => {\n        getAdjectives();\n    }, [])\n\n    return (\n        <TagalogContext.Provider value={{adjectives}}>\n            {props.children}\n        </TagalogContext.Provider>\n    )\n\n}\n\n","import React, { useState } from 'react';\nimport { Card } from 'react-bootstrap'\n \nexport const VocabCard = (props) => {\n    const [isFlipped, setIsFlipped] = useState(false)\n\n    return (\n        <div className=\"mt-3 mb-3\">\n            <Card className=\"m-auto\" bg={isFlipped ? \"blue\": \"blue\"}\n            text={isFlipped ? \"dark\" :\"dark\"} border=\"warning\"\n            style={{ width: '18rem' }}\n            onClick={() => { setIsFlipped(!isFlipped)}}>\n                <Card.Header>{props.type}</Card.Header>\n                <Card.Body>\n                    <Card.Title>\n                        {isFlipped ? props.english : props.latin}\n                    </Card.Title>\n                    <Card.Text>{isFlipped ? ' ' : props.notes}</Card.Text>\n                </Card.Body>\n            </Card>\n        </div>\n    )\n}\n\n","import React, { useContext, useState, useEffect } from 'react';\nimport { TagalogContext } from '../contexts/TagalogContext';\nimport { VocabCard } from './VocabCard';\nimport { Button } from 'react-bootstrap'\nimport _ from 'lodash';\n\nexport const VocabPractice = (props) => {\n    const { adjectives } = useContext(TagalogContext)\n    const [cards, setCards] = useState([]);\n    const [currentCardIndex, setCurrentCardIndex] = useState(-1);\n    const [currentCard, setCurrentCard] = useState({});\n\n    useEffect(() => {\n        if (adjectives.length) {\n            let newCards = [...cards];\n            newCards = newCards.concat(adjectives);\n            setCards(newCards);\n        }\n    }, [adjectives])\n\n    useEffect(() => {\n        if (currentCardIndex < 0) {\n            if (cards.length) {\n                setCurrentCardIndex(0);\n            }\n        }\n    }, [cards])\n\n    useEffect(() => {\n        setCurrentCard({...cards[currentCardIndex]});\n    }, [currentCardIndex])\n\n    return cards.length ? (\n        <div className=\"text-center mt-5\">\n            <h1>Vocab Practice</h1>\n            <VocabCard  latin={currentCard.latin} english={currentCard.english}\n                notes={currentCard.notes} englishSentence={currentCard.englishSentence}\n                type={_.startCase(currentCard.type)}/>\n            <Button variant=\"primary\" onClick={() => {\n                let index = currentCardIndex\n                if (index === cards.length -1) {\n                    // loop back\n                    index = 0;\n                } else {\n                    index++\n                }\n                setCurrentCardIndex(index)\n            }}>Next</Button>\n            <hr />\n            <p> Showing {currentCardIndex+1} / {cards.length} </p>\n        </div>\n    ) : (\n        <div className=\"text-center mt-5\">\n            <h1>Retrieving vocab from database...</h1>\n        </div>\n        )\n\n}","import React from 'react';\nimport { TagalogContextProvider } from './contexts/TagalogContext';\nimport { VocabPractice } from './components/VocabPractice';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n     <TagalogContextProvider>\n          <VocabPractice />\n      </TagalogContextProvider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}